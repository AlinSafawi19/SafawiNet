services:
  postgres:
    image: postgres:15-alpine
    container_name: safawinet-postgres
    environment:
      POSTGRES_DB: safawinet_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: alin123M
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: safawinet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  mailhog:
    image: mailhog/mailhog:latest
    container_name: safawinet-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: safawinet-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "13133:13133"  # Health check endpoint
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  api:
    build:
      context: ./server/api
      dockerfile: Dockerfile.simple
    container_name: safawinet-api
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:alin123M@postgres:5432/safawinet_dev
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ACCESS_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - NODE_ENV=development
      - PORT=3000
      - RATE_LIMIT_TTL=60000
      - RATE_LIMIT_LIMIT=100
      - LOGIN_BURST_LIMIT=300
      - BULLMQ_PREFIX=safawinet
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - COOKIE_DOMAIN=localhost
      - PRISMA_CLIENT_ENGINE_TYPE=dataproxy
      - NODE_OPTIONS=--max-old-space-size=2048
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      otel-collector:
        condition: service_started
    volumes:
      - ./server/api:/app
      - /app/node_modules
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: safawinet-client
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
