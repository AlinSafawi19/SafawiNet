services:
  postgres:
    image: postgres:15-alpine
    container_name: safawinet-postgres
    environment:
      POSTGRES_DB: safawinet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: alin123M
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: safawinet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: safawinet-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: safawinet-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "13133:13133"  # Health check endpoint
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP

  api:
    build:
      context: ./server/api
      dockerfile: Dockerfile.dev
    container_name: safawinet-api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:alin123M@postgres:5432/safawinet
      REDIS_URL: redis://redis:6379
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      OTEL_ENDPOINT: http://otel-collector:4318
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      otel-collector:
        condition: service_started
    volumes:
      - ./server/api:/app
      - /app/node_modules
    command: npm run start:dev

volumes:
  postgres_data:
  redis_data:
